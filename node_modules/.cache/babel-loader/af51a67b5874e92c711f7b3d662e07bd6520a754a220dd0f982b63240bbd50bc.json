{"ast":null,"code":"import axios from './api';\nimport AuthService from './authService';\nclass DocumentService {\n  constructor() {\n    this.token = AuthService.getToken();\n  }\n\n  // Get headers with authorization\n  getHeaders() {\n    return {\n      'Authorization': `Bearer ${this.token}`,\n      'Content-Type': 'multipart/form-data'\n    };\n  }\n\n  // Upload a document\n  async uploadDocument(file, metadata) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Append additional metadata\n    Object.keys(metadata).forEach(key => {\n      formData.append(key, metadata[key]);\n    });\n    try {\n      const response = await axios.post('/documents/upload', formData, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  // Get user's documents\n  async getDocuments(filters = {}) {\n    try {\n      const response = await axios.get('/documents', {\n        headers: this.getHeaders(),\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  // Get document details\n  async getDocumentDetails(documentId) {\n    try {\n      const response = await axios.get(`/documents/${documentId}`, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  // Delete a document\n  async deleteDocument(documentId) {\n    try {\n      const response = await axios.delete(`/documents/${documentId}`, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  // OCR document extraction\n  async extractDocumentData(documentId) {\n    try {\n      const response = await axios.post(`/documents/${documentId}/extract`, {}, {\n        headers: this.getHeaders()\n      });\n      return response.data;\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  // Handle errors\n  handleError(error) {\n    var _error$response;\n    console.error('Document Service Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n}\nexport default new DocumentService();","map":{"version":3,"names":["axios","AuthService","DocumentService","constructor","token","getToken","getHeaders","uploadDocument","file","metadata","formData","FormData","append","Object","keys","forEach","key","response","post","headers","data","error","handleError","getDocuments","filters","get","params","getDocumentDetails","documentId","deleteDocument","delete","extractDocumentData","_error$response","console","message"],"sources":["C:/Users/chira/OneDrive/Desktop/tax-companion-frontend/src/services/documentService.js"],"sourcesContent":["import axios from './api';\r\nimport AuthService from './authService';\r\n\r\nclass DocumentService {\r\n  constructor() {\r\n    this.token = AuthService.getToken();\r\n  }\r\n\r\n  // Get headers with authorization\r\n  getHeaders() {\r\n    return {\r\n      'Authorization': `Bearer ${this.token}`,\r\n      'Content-Type': 'multipart/form-data'\r\n    };\r\n  }\r\n\r\n  // Upload a document\r\n  async uploadDocument(file, metadata) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    // Append additional metadata\r\n    Object.keys(metadata).forEach(key => {\r\n      formData.append(key, metadata[key]);\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        '/documents/upload', \r\n        formData, \r\n        { headers: this.getHeaders() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Get user's documents\r\n  async getDocuments(filters = {}) {\r\n    try {\r\n      const response = await axios.get('/documents', {\r\n        headers: this.getHeaders(),\r\n        params: filters\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Get document details\r\n  async getDocumentDetails(documentId) {\r\n    try {\r\n      const response = await axios.get(\r\n        `/documents/${documentId}`, \r\n        { headers: this.getHeaders() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Delete a document\r\n  async deleteDocument(documentId) {\r\n    try {\r\n      const response = await axios.delete(\r\n        `/documents/${documentId}`, \r\n        { headers: this.getHeaders() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // OCR document extraction\r\n  async extractDocumentData(documentId) {\r\n    try {\r\n      const response = await axios.post(\r\n        `/documents/${documentId}/extract`, \r\n        {},\r\n        { headers: this.getHeaders() }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Handle errors\r\n  handleError(error) {\r\n    console.error('Document Service Error:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default new DocumentService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}